#!/bin/sh
#
# `ref`: Search bookmark and local documents.
#
# Depends: `grep`, `zet`, `rm`, `pandoc`, `lynx`
# Environment: DOCUMENTS, BOOKMARKS, ZETTELKAST, BROWSER

: "${BROWSER:=lynx}"
: "${BOOKMARKS:="$ZETTELKAST/222205121754.md"}"
: "${DOCUMENTS:="$HOME/Documents"}"

usage () {
	echo 'usage: ref [<option>] <keyword>'
	echo 'without option: display results for <keyword> in BROWSER'
	echo 'options: -m  print results as markdown links to stdout'
	echo '         -n  print file paths/urls to stdout'
	echo '         -h  display this message'
	exit
}

search () {
	for arg do 
		regex="${regex+"$regex.*"}$arg"
		glob="${glob+"$glob*"}$arg"
	done

	grep -i "$regex" "$BOOKMARKS" | while IFS= read -r result; do
		if [ -n "$nobrowser" ] && [ -z "$markdown" ]; then
			result="${result##*(}"
			result="${result%)*}"
		elif [ -n "$markdown" ]; then
			result="${result#\* }"
		fi

		printf '%s\n' "$result"
	done

	for result in "$DOCUMENTS"/*"$glob"*; do
		[ -e "$result" ] || continue

		if [ -n "$markdown" ]; then
			result="$(linkify "$result")"
		elif [ -z "$nobrowser" ]; then
			result="* $(linkify "$result")"
		fi

		printf '%s\n' "$result"
	done

	if [ -n "$nobrowser" ] && [ -z "$markdown" ]; then
		zet -S "$@"
	else
		zet -lS "$@"
	fi | while IFS= read -r result; do
		case "$result" in
			*222205121754*) continue
		esac

		if [ -z "$nobrowser" ]; then
			result="* $result"
		fi

		printf '%s\n' "$result"
	done
}

main()
{
	tmp=/tmp/ref-$$.html

	[ $# -eq 0 ] && ! usage

	while getopts :hmn opt; do
		case "$opt" in
			m) markdown=1 nobrowser=1 ;;
			n) nobrowser=1 ;;
			h) usage ;;
			*) ! usage ;;
		esac

		shift $((OPTIND - 1))
	done

	if [ -n "$nobrowser" ]; then
		search "$@"
	else
		search "$@" | pandoc -f markdown+smart -t html -o "$tmp"
		"$BROWSER" "$tmp"
	fi

	[ -e "$tmp" ] && rm "$tmp"

	return 0
}

main "$@"

