#!/bin/sh
#
# `todo` : View/append to todo list.
#
# Depends: `vi`, `lynx`
# Environment: ZETTELKAST, TODO_INDEX, TODO_TODAY, TODO_TOMORROW, EDITOR,
#              BROWSER

: "${ZETTELKAST:="$HOME/Zettelkast"}"
: "${TODO_INDEX:="$ZETTELKAST/222205114007.md"}"
: "${TODO_TODAY:="$ZETTELKAST/221406140136.md"}"
: "${TODO_TOMORROW:="$ZETTELKAST/221406140141.md"}"
: "${EDITOR:=vi}"
: "${BROWSER:=lynx}"

usage () {
	echo 'usage: todo [<option>] [<when>] [<input>]'
	echo 'options:  -h  display this message'
	echo '          -a  append item <input> to list <when>'
	echo '          -A  append each item <input> to list <when>'
	echo '          -b  view list <when> in BROWSER'
	echo '          -e  edit list <when> in EDITOR'
	echo 'when:  today | tomorrow | later'
	echo 'input:  <string> | <stdin>'
	echo
	echo 'if <input> is omitted input is read from stdin'
	exit
} >&2

error () {
	printf '%s: %s\n' "${0##*/}" "${@:-error}"
	exit 1
} >&2

append () {
	case "$1" in
		today)
			shift
			file="$TODO_TODAY"
		;;

		tomorrow)
			shift
			file="$TODO_TOMORROW"
		;;

		*) file="$TODO_INDEX" ;;
	esac

	if [ $# -eq 0 ]; then
		while IFS= read -r line; do
			set -- "$@" "$line"
		done
	fi

	{
		case "$1" in
			'* '*) printf '%s\n' "$1" ;;
			*) printf '* %s\n' "$1" ;;
		esac

		shift

		for arg do
			if [ -n "$multi" ]; then
				case "$arg" in
					'* '*) : ;;
					*) arg="* $arg" ;;
				esac
			else
				arg="  $arg"
			fi

			printf '%s\n' "$arg"
		done
	} >>"$file"
}

view () {
	case "$1" in
		today)
			shift
			file="$TODO_TODAY"
		;;

		tomorrow)
			shift
			file="$TODO_TOMORROW"
		;;

		*) file="$TODO_INDEX" ;;
	esac

	[ -n "$browse" ] && exec "$BROWSER" "zet:${file#"$ZETTELKAST/"}"
	[ -n "$edit" ] && exec "$EDITOR" "$file"
	
	print=0
	while IFS= read -r line; do
		[ -z "$line" ] && continue

		if [ "$file" = "$TODO_INDEX" ]; then
			case "$line" in
				'## Uncategorised')
					print=1
					line="${line#\#}"
				;;
			esac

			[ "$print" -eq 1 ] && printf '%s\n' "$line"
		else
			printf '%s\n' "$line"
		fi
	done <"$file"
}

main () {
	while getopts :aAbehn opt; do
		case "$opt" in
			a) append=1 ;;
			A) append=1 multi=1 ;;
			b) browse=1 ;;
			e) edit=1 ;;
			h) usage ;;
			*) error "bad option: $opt" ;;
		esac
	done

	shift $((OPTIND - 1))

	while [ $# -gt 0 ]; do
		case "$1" in
			today|tomorrow|later)
				when="$1"
				shift
			;;
			"") : ;;
			*) break ;;
		esac
	done

	[ -z "$when" ] && when='today'

	if [ -n "$append" ]; then
		append "$when" "$@"
	else
		view "$when"
	fi

}

main "$@"
