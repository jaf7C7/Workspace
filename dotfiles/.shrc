#
# Shell options
#

# Quit if not interactive
case $- in
	*i*) : ;;
	*) return ;;
esac

# Vi mode line editing
set -o vi

#
# Environment variables
#

set -a

# Encourage POSIX compliance
POSIXLY_CORRECT=1
ENV=~/.shrc

# Timezone, locale and hostname
TZ='Europe/London'
LANG=en_GB.UTF-8
if [ -z "$HOSTNAME" ]; then
	if command -v hostname >/dev/null 2>&1; then
		HOSTNAME="$(hostname)"
	elif [ -r /etc/hostname ]; then
		read -r HOSTNAME </etc/hostname
	fi
fi

# File system
TMP_DIR=/tmp
STOW_DIR=~/Workspace
DOTFILES="$STOW_DIR/dotfiles"
BIN=~/.local/bin
CGI_BIN=~/.local/cgi-bin
ZETTELKAST=~/Zettelkast
DOCUMENTS=~/Documents
BOOKS="$DOCUMENTS/books"
PROJECTS=~/Projects
BAT_DIR=/sys/class/power_supply/BAT1
case $PATH in
	"$BIN:"*) : ;;
	*) PATH="$BIN:$PATH" ;;
esac
CDPATH=.:~:~/Workspace:~/.local:~/Projects

# Editor
EDITOR=vi
EXINIT='set ai ts=8 sw=8 nows noic noflash'

# Pager
PAGER=more
LESS='-Fgj13$RX'
if [ -x /usr/bin/lesspipe ]; then
	LESSOPEN='| /usr/bin/lesspipe %s'
	LESSCLOSE='/usr/bin/lesspipe %s %s'
fi
LESSHISTFILE='-'
MANPAGER=w3m
MANLESS='--Manual page $MAN_PN--?PB(%PB\%).'

# Browser
BROWSER=lynx
GUIBROWSER=firefox
WWW_HOME=https://lite.duckduckgo.com/lite

# Bash
if [ -n "$BASH_VERSION" ]; then
	HISTCONTROL=ignoreboth:erasedups:
fi

# Node
NODE_DISABLE_COLORS=1

# NPM
# https://github.com/sindresorhus/guides/blob/main/npm-global-without-sudo.md
# https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally/
NPM_CONFIG_PREFIX=~/.npm-global
NPM_BIN="$NPM_CONFIG_PREFIX/bin"
case $PATH in
	*"$NPM_BIN") : ;;
	*) PATH="$PATH:$NPM_BIN" ;;
esac
if command -v manpath >/dev/null 2>&1; then
	NPM_MANPATH="$NPM_CONFIG_PREFIX/share/man"
	case $MANPATH in
		*"$NPM_MANPATH") : ;;
		*) MANPATH="$MANPATH:$NPM_MANPATH" ;;
	esac
fi

set +a

#
# Prompt
#

# '[19%]joss@lenovo:~/Workspace/dotfiles(master)$ '
__ps1() {
	case $PWD in
		~/*|~) __PWD="~${PWD#~}" ;;
		*) __PWD="$PWD" ;;
	esac

	if [ -z "${TMUX}${STY}${DISPLAY}" ]; then
		b="$(bat -q)"
		[ -n "$b" ] && __PS1="[$b]"
		unset b
	fi

	if [ -n "$PS1_USER" ]; then
		__PS1="${__PS1}${USER}"
	fi

	if [ -n "$PS1_HOST" ]; then
		[ -n "$PS1_USER" ] && __PS1="${__PS1}@"
		__PS1="${__PS1}${HOSTNAME}"
	fi

	if [ -n "$PS1_DIR" ]; then
		[ -n "$PS1_HOST" ] && __PS1="${__PS1}:"
		__PS1="${__PS1}${__PWD}"
		unset __PWD
	fi

	if [ -n "$PS1_GIT" ]; then
		b="$(git branch --show-current)"
		[ -n "$b" ] && __PS1="${__PS1}($b)"
		unset b
	fi

	printf '%s' "$__PS1"
	unset __PS1
} 2>/dev/null

ps1() {
	usage() {
		echo 'usage:    ps1 [ show | hide ] [ all | <segment>... ]'
		echo 'segments: `user'\'', `host'\'', `dir'\'', `git'\'''
		return 1
	}

	show() {
		[ "$1" = 'all' ] && set -- host user dir git

		for arg do
			case $arg in
				user) export PS1_USER=1 ;;
				host) export PS1_HOST=1 ;;
				dir)  export PS1_DIR=1 ;;
				git)  export PS1_GIT=1 ;;
				*)    usage ;;
			esac
		done

		unset arg
	}

	hide() {
		[ "$1" = 'all' ] && set -- host user dir git

		for arg do
			case $arg in
				host) unset PS1_HOST ;;
				user) unset PS1_USER ;;
				dir)  unset PS1_DIR ;;
				git)  unset PS1_GIT ;;
				*)    usage ;;
			esac
		done

		unset arg
	}

	case $1 in
		short) hide all ;;
		long)  show all ;;
		show)  shift; show "$@" ;;
		hide)  shift; hide "$@" ;;
		*)     usage ;;
	esac

	unset usage show hide
}

ps1 short

PS1='$(__ps1)$ '

if [ -n "$BASH_VERSION" ];then
	# Update tmux/screen window title
	case $TERM in
		screen*)
			PROMPT_COMMAND[1]='
				printf '\''\e_%s\e\\'\'' "${PWD/~/\~}"
			'
		;;

		tmux*)
			PROMPT_COMMAND[1]='
				printf '\''\e]2;%s\007'\'' "${PWD/~/\~}"
			'
		;;
	esac
else
	# Shell name in prompt
	PS1="$0\$ "
fi

#
# Aliases
#

alias ?='echo $?'
alias ..='up'
alias bc='bc -sw'
alias c='clear'
alias ed='ed -lG'
alias jobs='jobs -l'
alias jq='jq --tab --indent 4 --monochrome-output'
alias psp='ps -o pid,ppid,pgid,tty,args -p'
alias sed='sed --posix'
alias tree='tree -n'
alias x='exit'
alias z='fg %-'

#
# Functions
#

bw() {
	trap 'xsel --clipboard --delete; return 1' INT STOP EXIT

	case $* in
		unlock)
			export BW_SESSION="$(command bw unlock --raw)"
		;;

		'get password '*)
			xsel --clipboard --input <<-EOF
				$(command bw "$@")
			EOF

			sleep 10

			xsel --clipboard --delete
		;;

		*)
			command bw "$@"
		;;
	esac

	trap - INT STOP EXIT
}

cd() {
	if command cd "$@" >/dev/null; then
		[ -n "$PS1_DIR" ] || pwd -P
	fi
}

wifi() {
	case $1 in
		oneplus) nmcli connection up 'OnePlus 6T' ;;
		iphone) nmcli connection up 'Fayeâ€™s iPhone' ;;
		zyxel) nmcli connection up 'Zyxel_23A9' ;;
		*) ! echo 'usage: wifi [ oneplus | iphone | zyxel ]' >&2 ;;
	esac
}

up() {
	path='..'

	while [ $((i)) -lt ${1:-1} ]; do
		path="$path/.."
		i=$((i + 1))
	done

	cd "$path"

	unset i path
}

